---
title: "Clase de Borja"
description: |
  Rmarkdown con tema de distiller::distill_article.
author:
  - name: Borja Andrino
    url: https://elpais.com
    affiliation: El País
    affiliation_url: https://elpais.com
date: "`r as.character(format(Sys.Date(), '%d-%m-%Y'))`"
output:
  html_document:
    toc: true
    toc_depth: 3
    toc_float: true
editor_options: 
  chunk_output_type: inline
---


```{r setup, include = FALSE}
# Ajustes generales de los chunks
# x que no salgan los warning en el html
# x que no salgan los mensajes de error en el html
knitr::opts_chunk$set(error = FALSE, warning = FALSE)
```

Vamos a utilizar este notebook para seguir de forma práctica la diapositivas de la clase y poder ir practicando a la vez

```{r}
# install.packages( "tidyverse")
library(tidyverse)
library(lubridate)
```

# tidyverse

## Lectura y escritura de ficheros

#### ¿Cómo leemos los archivos?

```{r}
my_data <- read_csv("~/Downloads/data_raw/votos_10n_por_municipios.csv")
my_data_2 <- read_csv("~/Downloads/data_raw/votos_28a_por_municipios.csv")
```

```{r echo = FALSE}
# Visualizar tabla
# si echo = FALSE --> ejecuta código, muestra resultados pero no el chunk
DT::datatable(my_data %>% slice(1:100), options = list(pageLength = 10),
              caption = "Datos de elecciones del 10N")
```

#### ¿Y escribimos (exportamos)?

```{r}
write_csv(my_data, "./my_data_rewritten.csv")

my_data %>% 
  write_csv("./my_data_rewritten.csv")
```

## Selección y creación de nuevas variables

#### select

```{r}

select(my_data, codigo_mun, partido, votos_pc) 


my_data %>% select(-codigo_mun)
```

**Problemas**

1.  Selecciona todas las columnas excepto el porcentaje de votos.

2.  Selecciona el código de municipio, el partido y las variables relacionadas con el voto

```{r}
# Resuélvelos aquí
names(my_data)

my_data %>% 
  select(-votos_pc)

my_data %>% 
  select(`Código de municipio` = codigo_mun, partido, contains("voto"))


my_data %>% 
  rename(`Código de municipio` = codigo_mun)

```

#### mutate

```{r}
my_data %>% 
  mutate( tipo_partido = if_else(partido %in% c( "PSOE", "PP", "VOX", "UP", "Cs"), 
                                 "Ámbito nacional", 
                                 "Otros")) %>% 
  distinct(partido, tipo_partido) 

my_data %>% 
  mutate( fecha = lubridate::today())

my_data %>% 
  mutate( candidato = case_when( partido == "PSOE" ~ "Sánchez", 
                                 partido == "PP" ~ "Casado", 
                                 partido == "VOX" ~ "Abascal", 
                                 partido == "UP" ~ "Iglesias", 
                                 partido == "Cs" ~ "Rivera", 
                                 partido == "MP" ~ "Errejon", 
                                 T ~ "Otros"))

```

**Problemas**

3.  Crea una columna en la que se sume el número de votos a candidaturas y el número de votos en blanco.

4.  Obtén el municipio con mayor porcentaje de votos nulos de España. ¿Y el que tiene mayor porcentaje de blancos?

```{r}
# Resuélvelos aquí

my_data %>% 
  mutate(votos_validos = candidaturas + blancos)

my_data %>% 
  distinct( codigo_mun, blancos, nulos)


my_data_with_pc <- my_data %>% 
  distinct( codigo_mun, .keep_all = T) %>% 
  mutate(blancos_pc = 100 * blancos / (candidaturas + nulos + blancos),
         nulos_pc = 100 * nulos / (candidaturas + nulos + blancos)) %>%
  select( codigo_mun, blancos_pc, nulos_pc)

my_data_with_pc %>% 
  slice_max( nulos_pc, n = 1)

my_data_with_pc %>% 
  slice_max( blancos_pc, n = 1)

```

## Filtros

```{r}

my_data %>% 
  filter( votos_pc == 100)

my_data %>% 
  filter( partido == "VOX" & votos_pc > 50) 

my_data %>% 
  filter((partido == "ERC" | partido == "JxCAT") & 
            votos_pc > 50) 

my_data %>% 
  filter( partido %in% c( "ERC", "JxCAT") & 
            votos_pc > 50)

```

**Problemas**

5.  Obtén los 10 municipios en los que más se vota a Vox.

6.  Obtén los 10 municipios de menos de 50.000 votantes en las listas de la provincia de Madrid donde Vox obtiene un porcentaje de voto más alto.

7.  Obtén los 10 municipios de menos de 50.000 habitantes de la provincia de Madrid donde Vox obtiene un porcentaje de voto más alto.

```{r}
# Resuélvelos aquí

una_variable_muy_old <- my_data %>% 
  mutate(codigo_prov = str_sub(codigo_mun, 1, 2)) %>% 
  group_by(codigo_prov)

una_variable_muy_old %>% 
  filter(partido == "VOX") %>% 
  slice_max(votos_pc, n = 10)

my_data %>% 
  filter(censo < 50000,
         str_sub(codigo_mun, 1, 2) == "28",
         partido == "VOX") %>% 
  arrange( desc( votos_pc)) %>% 
  select(-blancos:-part)

```

## Summarise

```{r}
my_data %>% 
  distinct( codigo_mun, censo, blancos, nulos, candidaturas) %>%
  summarise( censo = sum(censo),
             candidaturas = sum(candidaturas),
             blancos = sum(blancos), 
             nulos = sum(nulos)) 


my_data %>% 
  summarise( censo = sum(censo),
             candidaturas = sum(candidaturas),
             blancos = sum(blancos), 
             nulos = sum(nulos)) %>% 
  mutate( part = 100 * (candidaturas + blancos + nulos) / censo)

```

## Group by

```{r}

my_data %>% 
  group_by(partido) 

```

```{r}

var1 <- my_data %>% 
  filter(codigo_mun %in% c("01001","01002","01003")) %>% 
  group_by(partido) %>% 
  mutate( votos_total = sum( votos)) %>% 
  ungroup() 

var2 <- var1 %>% 
  mutate(votos_prop=100*votos/votos_total) %>% 
  select( codigo_mun, partido, votos, votos_prop) %>% 
  filter( partido != "OTROS") 

```

**Problemas**

8.  Calcula los votos totales de cada partido

9.  Calcula la participación en cada provincia

10. Calcula los votos de cada partido según si el tamaño del municipio tiene más o menos de 50.000 habitantes

```{r}
# Resuélvelos aquí
my_data %>% 
  group_by(partido) %>% 
  summarise(votos_totales = sum(votos)) %>% 
  arrange( desc( votos_totales))


data_munis_10n <- my_data %>% 
  distinct( codigo_mun, .keep_all = T) %>% 
  select( codigo_mun:part) %>% 
  mutate( codigo_prov = str_sub(codigo_mun, 1, 2)) %>% 
  select(codigo_mun, codigo_prov, everything())

data_munis_28a <- my_data_2 %>% 
  distinct( codigo_mun, .keep_all = T) %>% 
  select( codigo_mun:part) %>% 
  mutate( codigo_prov = str_sub(codigo_mun, 1, 2)) %>% 
  select(codigo_mun, codigo_prov, everything())


data_munis_28a %>% 
  group_by(codigo_prov) %>% 
  summarise(censo = sum(censo), 
            candidaturas = sum(candidaturas),
            blancos = sum(blancos), 
            nulos = sum(nulos)) 


data_munis_28a %>% 
  mutate(votos_totales = candidaturas + blancos + nulos) %>% 
  group_by(codigo_prov) %>% 
  summarise(censo = sum(censo), 
            votos_totales = sum(votos_totales)) %>% 
  ungroup() %>% 
  mutate(part = 100 * votos_totales / censo) 


```

## Join

```{r}

tibble_1 <- tribble( 
  ~key, ~val_1, 
  "A", 2,
  "B", 4,
  "C", 6,
  "D", 8)

tibble_2 <- tribble( 
  ~key, ~val_2, 
  "A", 1,
  "C", 3,
  "E", 5,
  "F", 7)

```

```{r}

tibble_1 %>% 
  inner_join(tibble_2)


tibble_1 %>% 
  left_join(tibble_2)


tibble_1 %>% 
  right_join(tibble_2)


tibble_1 %>% 
  full_join(tibble_2)


tibble_1 %>% 
  anti_join(tibble_2)

```

**Problemas**

11. Calcula los votos de cada partido en el municipio de Fuenlabrada

12. Calcula los votos de cada partido en los municipios de San Juan del Molinillo y Navarredondilla

13. Calcula el top 10 de municipios donde más cayó la participación

```{r}
# Resuélvelos aquí
dict_munis <- read_csv2("./data_raw/cod_municipios_ine.csv") %>% 
  mutate(codigo_mun = str_glue("{CPRO}{CMUN}")) %>% 
  select(codigo_mun, mun = MUNICIPIO, prov = PROVINCIA, ccaa = CCAA)
  
my_data %>% 
  left_join(dict_munis, by = c( "codigo_mun" = "codigo_mun")) %>% 
  filter(mun == "Fuenlabrada")

my_data %>% 
  left_join(dict_munis, by = c( "codigo_mun" = "codigo_mun")) %>% 
  filter(mun %in% c( "San Juan del Molinillo", "Navarredondilla")) %>% 
  group_by(partido) %>% 
  summarise(votos = sum(votos))

data_munis_10n %>% 
  inner_join(data_munis_28a, 
             by = c( "codigo_mun", "codigo_prov"),
             suffix = c( "_10n", "_28a")) %>% 
  select(codigo_mun, codigo_prov, starts_with("part_")) %>% 
  mutate(part_diff = part_10n - part_28a) %>% 
  slice_min(part_diff, n = 10)

```

## Pivots

#### pivot_wider

```{r}

my_data %>% 
  filter( codigo_mun == "01001") %>% 
  select( codigo_mun, partido, votos) 


my_data %>% 
  filter( codigo_mun == "01001") %>% 
  select( codigo_mun, partido, votos) %>% 
  pivot_wider( names_from = partido, values_from = votos) 


```

#### pivot_longer

```{r}

my_data %>% 
  select( codigo_mun, partido, votos, votos_pc) %>% 
  pivot_wider( names_from = partido, values_from = votos) 

```

#### Problemas habituales

```{r}

aux_1 <- my_data %>%
  mutate( election = "10N") %>% 
  filter( codigo_mun == "01001") 

aux_2 <- my_data_2 %>%
  mutate( election = "28A") %>%
  filter( codigo_mun == "01001") 

aux_1 %>% 
  bind_rows( aux_2) %>% 
  pivot_wider(id_cols = codigo_mun, names_from = partido, values_from = votos)

```

# ggplot2

## Funciones

#### geom_point

```{r}

my_data %>% 
  filter( partido == "PSOE") %>%
  ggplot() + 
  geom_point(aes( x = part, y = votos_pc))

```

#### geom_histogram

```{r}

my_data %>% 
  filter( partido == "PSOE") %>% 
  ggplot() + 
  geom_histogram(aes( x = votos_pc))

```

#### geom_denstity

```{r}

my_data %>% 
  filter( partido == "PSOE") %>% 
  ggplot() + 
  geom_density(aes( x = votos_pc))

```

#### geom_col

```{r}
my_data %>% 
  group_by( partido) %>% 
  summarise( votos = sum(votos)) %>% 
  ggplot() + 
  geom_col( aes( x = partido, y = votos))

```

#### geom_line

```{r}

datos_covid <- read_csv( "https://cnecovid.isciii.es/covid19/resources/casos_tecnica_ccaa.csv")

datos_covid %>% 
  filter(ccaa_iso == "AN") %>% 
  ggplot() + 
  geom_line(aes(x = fecha,y = num_casos))
```

#### geom_line (smooth)

```{r}
datos_covid %>% 
  filter(ccaa_iso == "AN") %>% 
  ggplot() + 
  geom_line(aes(x = fecha,y = num_casos),
            stat = "smooth", 
            method = "loess", span = 0.1)
```

#### geom_step

```{r}
datos_covid %>% 
  filter(ccaa_iso == "AN", 
         fecha >= ymd( "2021-12-01")) %>% 
  ggplot() + 
  geom_step(aes(x = fecha,y = num_casos))

datos_covid %>% 
  filter(ccaa_iso == "AN", 
         fecha >= ymd( "2021-12-01")) %>% 
  ggplot() + 
  geom_step(aes(x = fecha,y = num_casos), 
            color = "red", 
            size = 1.2)


```

#### geom_area (smooth)

```{r}

datos_covid %>% 
  filter(ccaa_iso == "AN") %>% 
  ggplot() + 
  geom_area( aes(x = fecha,y = num_casos),
             stat = "smooth", 
             method = "loess", 
             span = 0.15, 
             fill = "darkgreen", 
             alpha = 0.5, 
             color = "black")

```

## Aesthetics

#### color, fill

```{r}

partidos_nac <- c( "PSOE", "PP", "VOX", "UP", "Cs")

my_data %>% 
  filter( partido %in% partidos_nac) %>%
  ggplot() + 
  geom_density(aes( x = votos_pc, 
                    color = partido, 
                    fill = partido), 
               size = 0.5, 
               alpha = 0.2)

my_data %>% 
  filter( partido %in% partidos_nac) %>%
  ggplot() + 
  geom_density(aes( x = votos_pc, 
                    color = "partido", 
                    fill = "partido"), 
               size = 0.5, 
               alpha = 0.2)

```

#### size


```{r}


colores <- c("#d7301f", "#2b8cbe", "#41ae76", "#8c6bb1", 
             "#fe9929", "#7bccc4", "gold", "darkblue", 
             "olivedrab4", "darkred", "greenyellow", 
             "yellow", "lightskyblue", "yellow", "forestgreen", "grey" ) 

names(colores) <- c("PSOE", "PP", "VOX", "UP", "Cs", "MP", "ERC", 
                    "JxCAT", "PRC", "Teruel", "Bildu", "CC", 
                    "BNG", "CUP", "PNV", "OTROS")

g1 <- my_data %>% 
  left_join( dict_munis) %>% 
  filter(censo > 1000 & ccaa == "Andalucía" & partido != "OTROS") %>% 
  mutate( partido = fct_relevel( partido, c( "PSOE", "PP", "VOX", "UP", "Cs", "MP"))) %>% 
  ggplot(aes(x = censo, y = votos_pc,
             size = censo)) + 
  geom_point(aes(fill = partido),
             alpha = 0.7,
             color = "white",
             shape = 21) +
  geom_line(stat="smooth", 
            method = "lm") + 
  scale_x_log10() +
  scale_y_continuous(limits = c(0, NA)) +
  scale_fill_manual( values = colores) +
  facet_wrap( ~partido, ncol = 3)

g1 <- g1 +
  labs( title="¿Partidos rurales y partidos urbanos en Andalucía?", 
        subtitle = "Relación entre censo y voto el 10N",
        x="Censo",
        y="% de voto", 
        caption = "Fuente: Ministerio del Interior") + 
  theme_minimal() + 
  theme(legend.position = "none")

g1
# ggsave( g1, filename = "output/my_graph.png", width = 9, height = 6)

```
